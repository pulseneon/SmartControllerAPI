// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using asp_net_db.Data;

#nullable disable

namespace asp_net_db.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231104135157_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("asp_net_db.Models.Connection", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Datname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("interval");

                    b.Property<int>("Pid")
                        .HasColumnType("integer");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ServerStatsId")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("ServerStatsId");

                    b.ToTable("Connection");
                });

            modelBuilder.Entity("asp_net_db.Models.ConnectionsInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("ConnectionsUtilization")
                        .HasColumnType("double precision");

                    b.Property<string>("MaxConnections")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NonIdleConnections")
                        .HasColumnType("integer");

                    b.Property<int>("TotalConnections")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ConnectionsInfo");
                });

            modelBuilder.Entity("asp_net_db.Models.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AllocatedSpace")
                        .HasColumnType("integer");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<string>("DbName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DisplayedName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HostnameSSH")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordSSH")
                        .HasColumnType("text");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PortSSH")
                        .HasColumnType("integer");

                    b.Property<string>("ServerOS")
                        .HasColumnType("text");

                    b.Property<int>("SettingsId")
                        .HasColumnType("integer");

                    b.Property<bool>("UseSSH")
                        .HasColumnType("boolean");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UsernameSSH")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SettingsId");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("asp_net_db.Models.ServerStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConnectionInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("DatabaseSize")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ProcessorPercentLoading")
                        .HasColumnType("double precision");

                    b.Property<int>("ServerId")
                        .HasColumnType("integer");

                    b.Property<long>("WritedAt")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ConnectionInfoId");

                    b.ToTable("ServerStats");
                });

            modelBuilder.Entity("asp_net_db.Models.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DatabaseSizePercent")
                        .HasColumnType("integer");

                    b.Property<int>("MaxConnectionsPercent")
                        .HasColumnType("integer");

                    b.Property<int>("MaxLoadingProcessor")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("asp_net_db.Models.Connection", b =>
                {
                    b.HasOne("asp_net_db.Models.ServerStats", null)
                        .WithMany("LongIdleConnections")
                        .HasForeignKey("ServerStatsId");
                });

            modelBuilder.Entity("asp_net_db.Models.Server", b =>
                {
                    b.HasOne("asp_net_db.Models.Settings", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("asp_net_db.Models.ServerStats", b =>
                {
                    b.HasOne("asp_net_db.Models.ConnectionsInfo", "ConnectionInfo")
                        .WithMany()
                        .HasForeignKey("ConnectionInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConnectionInfo");
                });

            modelBuilder.Entity("asp_net_db.Models.ServerStats", b =>
                {
                    b.Navigation("LongIdleConnections");
                });
#pragma warning restore 612, 618
        }
    }
}
